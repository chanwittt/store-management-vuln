openapi: 3.0.3
info:
  title: Store Management API
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /api/users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
                employee_id:
                  type: integer
              required:
                - username
                - password
                - role
      responses:
        "201":
          description: User created
  /api/login:
    post:
      summary: Login and obtain JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "200":
          description: Successful login
  /api/inventory:
    get:
      summary: List inventory items
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of inventory items
    post:
      summary: Create inventory item
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sku:
                  type: string
                description:
                  type: string
                icon_url:
                  type: string
                quantity:
                  type: integer
                cost_price:
                  type: number
                  format: float
                sale_price:
                  type: number
                  format: float
              required:
                - sku
                - description
                - quantity
                - cost_price
                - sale_price
      responses:
        "201":
          description: Item created
  /api/inventory/{id}:
    put:
      summary: Update inventory item
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sku:
                  type: string
                description:
                  type: string
                icon_url:
                  type: string
                quantity:
                  type: integer
                cost_price:
                  type: number
                  format: float
                sale_price:
                  type: number
                  format: float
              required:
                - sku
                - description
                - quantity
                - cost_price
                - sale_price
      responses:
        "200":
          description: Item updated
  /api/promotions:
    get:
      summary: List promotions
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of promotions
    post:
      summary: Create promotion
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                discount:
                  type: number
                discount_code:
                  type: string
              required:
                - title
                - discount
      responses:
        "201":
          description: Promotion created
  /api/employees:
    get:
      summary: List employees
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of employees
    post:
      summary: Create employee and user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                position:
                  type: string
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
              required:
                - name
                - position
                - username
                - password
                - role
      responses:
        "201":
          description: Employee created
  /api/customers:
    get:
      summary: List customers
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of customers
    post:
      summary: Create customer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                address:
                  type: string
                passport_id:
                  type: string
                credit_card:
                  type: string
              required:
                - name
                - email
      responses:
        "201":
          description: Customer created
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
